services:
  nginx:
    container_name: wp_nginx
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"  # For SSL
    volumes:
      - /mnt/efs/fs1/wordpress:/var/www/html
      - ./nginx/conf.d/default.prod.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/nginx/ssl:ro
      - ./certbot/www:/var/www/certbot
      - ./nginx/logs:/var/log/nginx  # For logs
    depends_on:
      - wordpress
    networks:
      - wordpress_network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  wordpress:
    container_name: wp_app
    build:
      context: .
      dockerfile: Dockerfile.prod
    volumes:
      - /mnt/efs/fs1/wordpress:/var/www/html
      - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    env_file:
      - .env
    networks:
      - wordpress_network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
  
  certbot:
    container_name: wp_certbot
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  
  mariadb:
    container_name: wp_db
    image: mariadb:latest
    env_file:
      - .env
    volumes:
      - /mnt/efs/fs1/mysql:/var/lib/mysql
    networks:
      - wordpress_network
    ports:
      - "3306:3306"

networks:
  wordpress_network:
    driver: bridge